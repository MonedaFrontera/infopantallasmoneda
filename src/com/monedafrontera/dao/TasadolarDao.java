/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.monedafrontera.dao;

import java.util.Date;
import com.monedafrontera.dto.*;
import com.monedafrontera.exceptions.*;

public interface TasadolarDao
{
	/** 
	 * Inserts a new row in the tasadolar table.
	 */
	public TasadolarPk insert(Tasadolar dto) throws TasadolarDaoException;

	/** 
	 * Updates a single row in the tasadolar table.
	 */
	public void update(TasadolarPk pk, Tasadolar dto) throws TasadolarDaoException;

	/** 
	 * Deletes a single row in the tasadolar table.
	 */
	public void delete(TasadolarPk pk) throws TasadolarDaoException;

	/** 
	 * Returns the rows from the tasadolar table that matches the specified primary-key value.
	 */
	public Tasadolar findByPrimaryKey(TasadolarPk pk) throws TasadolarDaoException;

	/** 
	 * Returns all rows from the tasadolar table that match the criteria 'codigopais = :codigopais AND fecha = :fecha'.
	 */
	public Tasadolar findByPrimaryKey(String codigopais, Date fecha) throws TasadolarDaoException;

	/** 
	 * Returns all rows from the tasadolar table that match the criteria 'codigopais = :codigopais'.
	 */
	public Tasadolar[] findWhereCodigopaisEquals(String codigopais) throws TasadolarDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the tasadolar table that match the specified arbitrary SQL statement
	 */
	public Tasadolar[] findByDynamicSelect(String sql, Object[] sqlParams) throws TasadolarDaoException;

	/** 
	 * Returns all rows from the tasadolar table that match the specified arbitrary SQL statement
	 */
	public Tasadolar[] findByDynamicWhere(String sql, Object[] sqlParams) throws TasadolarDaoException;

}
